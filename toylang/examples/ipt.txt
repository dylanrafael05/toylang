import "wow.txt"
import "std:malloc.tl"
import "std:io.tl"

declare fn puts(str *u8) i32

fn int_to_str(n i32) *u8: {
    let num = n;
    let out = std::malloc(100 as usize) as *u8;

    let mem = out;

    while num != 0 {
        *mem = 48 as u8 + ((num % 10) as u8);
        num = num / 10;
        mem = mem + 1;
    };
    
    let memf = out;
    let memb = mem - 1;

    while memf != memb and memf != memb - 1 {
        let tmp = *memf;
        *memf = *memb;
        *memb = tmp;

        memf = memf + 1;
        memb = memb - 1;
    };

    *mem = 0 as u8; 

    out
}

fn main():
{
    puts("Hello, world!");

    let a = add(1, 2);

    let x = 10;
    let xp = &x;

    let y = *xp;

    std::printf("%d\n", sizeof *u8);

    let m = std::malloc_many(sizeof i32, 10);
    std::free(m);

    return;

    puts("Fuck you");
}

mod std
{
    struct Test
    {
        x i32,
        y i32
    }
    
    fn bruh() Test: {
        let t = Test();
        let x = t.x;
        t
    }
}

fn bruh() std::Test: {
    let t = std::Test();
    let x = t.x;
    t
}

fn fibbonacci(n i32) i32:
    if n <= 0 {0} else if n <= 2 {1} else {fibbonacci(n - 1) + fibbonacci(n - 1)}